import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
df=pd.read_csv('advertising.csv')
df.head()
df.tail(5)
df.info()
df.describe()
df.shape
x = df.iloc[1,0:-1]
x
x = df.iloc[:,0:-1]
x
y = df.iloc[:,-1]
y
x.iloc[:,0]
df.head()
df.corr()
import seaborn as sns
sns.pairplot(data=df)
plt.show()
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=43)
x_train
x_test
y_train
y_test
x_train = x_train.astype(int)
x_test = x_test.astype(int)
y_train = y_train.astype(int)
y_test = y_test.astype(int)
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train_scaled = sc.fit_transform(x_train)
x_test_scaled = sc.fit_transform(x_test)
from sklearn.linear_model import LinearRegression
ir = LinearRegression()
ir.fit(x_train_scaled, y_train)
y_pred = ir.predict(x_test_scaled)
y_pred
y_test
import matplotlib.pyplot as plt
plt.scatter(y_test, y_pred, c='r')
import matplotlib.pyplot as plt
plt.scatter(y_test, y_pred, c='r', label='Predicted', marker='x')
plt.scatter(y_test, y_test,c='b', label='True', marker='o')
plt.xlabel('True Values')
plt.ylabel('Predicted Values')
plt.title('True vs. Predicted Values')
plt.show()
from sklearn.metrics import mean_squared_error
mse = mean_squared_error(y_test, y_pred)
mse
from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, y_pred)
mae
from sklearn.metrics import r2_score
r2 = r2_score(y_test, y_pred)
r2
